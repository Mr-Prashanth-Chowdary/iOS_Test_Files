import SwiftUI
import UIKit

struct ContentView: View {
    @State private var enteredDigits: [String] = []
    private let correctPasscode = ["1", "2", "3", "4"] // Example passcode

    var body: some View {
        VStack {
            HStack(spacing: 20) {
                ForEach(0..<4, id: \.self) { index in
                    Circle()
                        .stroke(Color.gray, lineWidth: 2)
                        .background(Circle().fill(self.enteredDigits.count > index ? Color.blue : Color.clear))
                        .frame(width: 20, height: 20)
                }
            }
            .padding()

            TextField("", text: Binding(
                get: { self.enteredDigits.joined() },
                set: { self.handleInputChange($0) }
            ))
            .keyboardType(.numberPad)
            .hidden()
        }
        .onAppear {
            self.showKeyboard()
        }
    }

    private func handleInputChange(_ input: String) {
        if input.count > 4 {
            return
        }

        self.enteredDigits = input.map { String($0) }

        if enteredDigits.count == 4 {
            validatePasscode()
        }
    }

    private func validatePasscode() {
        if enteredDigits == correctPasscode {
            // Passcode is correct, perform your action here
        } else {
            vibrate()
            resetPasscodeEntry()
        }
    }

    private func resetPasscodeEntry() {
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
            self.enteredDigits = []
        }
    }

    private func vibrate() {
        let generator = UIImpactFeedbackGenerator(style: .heavy)
        generator.impactOccurred()
    }

    private func showKeyboard() {
        DispatchQueue.main.async {
            UIApplication.shared.windows.first?.endEditing(false)
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
